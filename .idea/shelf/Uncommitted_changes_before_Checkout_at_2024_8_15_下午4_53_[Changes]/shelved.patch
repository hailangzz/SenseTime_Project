Index: SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'''\n    # 说明datalist为训练数据处理时，指定Ceph 是一种分布式存储系统节点与 Amazon S3 存储桶中存储图像路径对应关系的json表结构。\n    #   示例：\n    #       {\"filename\": \"SDC-OSS-2_tlsr:s3://roadsemantics/TSR/20240416_H64/crop/261329/camera/00001.jpg\", \"image_height\": 2160, \"image_width\": 3840, \"instances\": []}\n    #   说明：\n    #       SDC-OSS-2_tlsr：Ceph 存储集群中节点的地址，存储或服务器的名称\n    #       s3:// ：表示 Amazon S3 存储桶中的路径\n    #       roadsemantics：存储桶的名称\n    #       TSR/20240416_H64/crop/261329/camera/00001.jpg：图片文件在存储桶中的键（Key），指定了文件在存储桶中的具体位置（存储路径）\n'''\n\nimport os\nimport json\nimport copy\nimport yaml\n\nclass CreateFileDataList:\n    def __init__(self, folder_path,creat_datalist_config,search_data_project_info):\n        self.folder_path = folder_path\n        self.creat_datalist_config = creat_datalist_config\n        self.search_data_project_info = {                            #存储datalist输出名称，及标注数据项关模型项目名称的字典变量\n                                \"datetime_sting\":\"20240529_20240615\",\n                                \"collect_cars_name\": \"CN-003\",\n                                \"model_project_name\":\"tlr\",          # 筛选对应的model项目tag真值标签数据:tlr、tsr、obstacle、animal、roadmarker\n                                \"frame_rate_name\":\"3FPS\",\n                                \"batch_name\":\"b1\"                    # 数据批次名称\n                               }\n\n        self.search_data_project_info=search_data_project_info\n\n        self.file_dict = {\"filename\":\"SDC-OSS-2_tlsr:s3://roadsemantics/TSR/20240416_H64/crop/261329/camera/00001.jpg\",\n                          \"image_height\": 2160,\n                          \"image_width\": 3840,\n                          \"instances\": [],\n                          }\n        self.file_dict_list = []\n\n        self.search_config = {\"tlr\":\n                                  {\"tag_range_list\":[\"TSLR真值-路口红绿灯\"],\n                                  \"camera_type_list\":[\"center_camera_fov30\",\"center_camera_fov120\"],\n                                  \"interval_frame_num\":10   #原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                  },\n                              \"tsr\":\n                                  {\"tag_range_list\":\n                                      [\n                                          # \"TSLR真值-限速牌\",\n                                          \"TSLR真值-限制类标志（高宽重）\",\n                                          \"TSLR真值-解除限速牌\",\n                                          \"TSLR真值-解除限速类-以0结尾\",\n                                          # \"TSLR真值-限速类-以0结尾（含电子限速）\",\n                                          \"TSLR真值-限速类-以5结尾（含电子限速）\",\n\n                                      ],\n                                   \"camera_type_list\": [\"center_camera_fov30\",\"center_camera_fov120\"],\n                                   \"interval_frame_num\": 10\n                                   # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                   },\n                              \"tsr_ramp\":\n                                  {\"tag_range_list\":\n                                      [\n                                          \"TSLR真值-匝道标志\"\n                                      ],\n                                      \"camera_type_list\": [\"center_camera_fov30\", \"center_camera_fov120\"],\n                                      \"interval_frame_num\": 3\n                                      # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                  },\n                              \"obstacle\":\n                                  {\"tag_range_list\":\n                                       [\n                                           \"GOP真值-一般类-隔离柱\",\n                                           \"GOP真值-一般类-护栏\"\n                                       ],\n                                   \"camera_type_list\": [\"center_camera_fov30\",\"center_camera_fov120\"],\n                                   \"interval_frame_num\": 3\n                                   # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                   },\n\n                              \"animal\":\n                                  {\"tag_range_list\":\n                                       [\n                                           \"GOP真值-特定类-动物\"\n                                        ],\n                                   \"camera_type_list\": [\"center_camera_fov30\",\"center_camera_fov120\"],\n                                   \"interval_frame_num\": 3\n                                   # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                   },\n                              \"roadmarker\":\n                                  {\"tag_range_list\":\n                                       [\n                                           \"TSLR真值-路面标识\"\n                                       ],\n                                   \"camera_type_list\": [\"center_camera_fov30\",\"center_camera_fov120\",\"rear_camera\"],\n                                   \"interval_frame_num\": 3\n                                   # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。\n                                   }\n                              }\n\n    def create_row_info_of_datalist(self):\n\n        with open(self.folder_path, 'r', encoding='utf-8') as f:\n            # 使用 json.load() 方法解析JSON文件\n            data = json.load(f)\n            # print(data.keys())\n            for monthdate in data:\n                # print(monthdate)\n                for daytime in data[monthdate]:\n                    # print(daytime)\n                    for minute in data[monthdate][daytime]:\n                        # print(minute)\n                        for single_record_tag_info in data[monthdate][daytime][minute][\"origin_record_tag\"]:\n                            # print(type(single_record_tag_info[\"tag\"]),single_record_tag_info[\"tag\"])\n                            # if \"路口红绿灯\" in single_record_tag_info[\"tag\"]:\n                            # 根据model项目的不同，选择对应的tag真值列表数据\n                            if single_record_tag_info[\"tag\"] in self.search_config[self.search_data_project_info[\"model_project_name\"]][\"tag_range_list\"]:\n                            # if \"隔离柱\"  in single_record_tag_info[\"tag\"] or \"护栏\"  in single_record_tag_info[\"tag\"]:\n                            # if \"GOP真值-特定类-动物\" in single_record_tag_info[\"tag\"]:\n                                #for camera_type in [\"center_camera_fov30\",\"center_camera_fov120\",\"rear_camera\"]:\n                            # 根据model项目不同，选择对应的摄像头类型列表，不同的前视、后视摄像头\n                                for camera_type in self.search_config[self.search_data_project_info[\"model_project_name\"]][\"camera_type_list\"]:\n                                    for camera_frame_path_index in range(len(single_record_tag_info[camera_type])):\n                                        if camera_frame_path_index%self.search_config[self.search_data_project_info[\"model_project_name\"]][\"interval_frame_num\"] == 0:\n                                            file_path = os.path.join(monthdate,daytime,minute,single_record_tag_info[camera_type][camera_frame_path_index])\n\n                                            self.file_dict[\"filename\"] = (self.creat_datalist_config[\"Ceph Addr\"] +\n                                                                          self.creat_datalist_config[\"Amazon S3 bucket\"]+\n                                                                          self.creat_datalist_config[\"Project Directory\"]+file_path)\n                                            # print(self.file_dict[\"filename\"])\n                                            self.file_dict_list.append(copy.deepcopy(self.file_dict))\n\n    def save_to_json(self, output_file):\n\n        with open(output_file, 'w') as json_file:\n            for row_dict_info in self.file_dict_list:\n                json_file.write(json.dumps(row_dict_info))\n                json_file.write(\"\\n\")\n        json_file.close()\n\n\n# 用法示例\nif __name__ == \"__main__\":\n    #folder_path = '/data/TSR/S1_snap'  # 替换为要遍历的文件夹路径\n    folder_path = '/data/data_senseauto/bucket_tag_data/save_statistics_tags_info/2024_07/detail_tag_result_dict.json'\n\n    search_data_project_info = {\n                                \"datetime_sting\":\"20240701_20240730\",\n                                \"collect_cars_name\": \"CN-007\",\n                                \"model_project_name\":\"tlr\",          # 筛选对应的model项目tag真值标签数据:tlr、tsr、obstacle、animal、roadmarker、tsr_ramp\n                                \"frame_rate_name\":\"3FPS\",\n                                \"batch_name\":\"b1\"\n                               }\n    #output_json_file = 'Generalization_L3_list.json'  # JSON 字典文件的输出路径\n    # output_json_file = '20240529_20240615_CN-003_tlr.json'  # JSON 字典文件的输出路径\n    # output_json_file = '20240529_20240615_CN-003_animal.json'  # JSON 字典文件的输出路径\n    # output_json_file = 'Generalization_G5_obstacle_list.json'  # JSON 字典文件的输出路径\n    output_json_file = \"/data/data_senseauto/bucket_tag_data/save_statistics_tags_info/2024_07/\"+\"_\".join(search_data_project_info.values())+\".json\"  # JSON 字典文件的输出路径\n\n\n    data_batch_id = \"Data_Collection/GT_data/hadGtParser/had_gt_collection/\"\n    creat_datalist_config = {\n                             \"Ceph Addr\":\"ad_system_common:\",\n                             # \"Ceph Addr\":\"SDC-OSS-3:\",\n                             \"Amazon S3 bucket\":\"s3://sdc3-faw-2/\",\n                             \"Project Directory\":\"HAD/\"+data_batch_id\n                             }\n\n    file_lister = CreateFileDataList(folder_path,creat_datalist_config,search_data_project_info)\n    file_lister.create_row_info_of_datalist()\n    file_lister.save_to_json(output_json_file)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py
--- a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py	
+++ b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py	
@@ -22,12 +22,11 @@
                                 "datetime_sting":"20240529_20240615",
                                 "collect_cars_name": "CN-003",
                                 "model_project_name":"tlr",          # 筛选对应的model项目tag真值标签数据:tlr、tsr、obstacle、animal、roadmarker
-                                "frame_rate_name":"3FPS",
+                                "frame_rate_num":"3FPS",
                                 "batch_name":"b1"                    # 数据批次名称
                                }
 
         self.search_data_project_info=search_data_project_info
-
         self.file_dict = {"filename":"SDC-OSS-2_tlsr:s3://roadsemantics/TSR/20240416_H64/crop/261329/camera/00001.jpg",
                           "image_height": 2160,
                           "image_width": 3840,
@@ -94,6 +93,13 @@
                                    # 原始视频图像帧率为30FPS，每秒30帧。interval_frame_num=3代表每间隔3帧抽取一帧，每秒10帧。
                                    }
                               }
+        self.set_search_config_interval_frame_num()
+
+    def set_search_config_interval_frame_num(self): #通过给定的帧率数，计算数据帧间隔
+        if self.search_data_project_info["model_project_name"] not in self.search_config:
+            print("the model project {} is not existing!".format(self.search_data_project_info["model_project_name"]))
+        else:
+            self.search_config[self.search_data_project_info["model_project_name"]]["interval_frame_num"] = int(30/int(self.search_data_project_info["frame_rate_num"].split('FPS')[0]))
 
     def create_row_info_of_datalist(self):
 
@@ -145,16 +151,17 @@
                                 "datetime_sting":"20240701_20240730",
                                 "collect_cars_name": "CN-007",
                                 "model_project_name":"tlr",          # 筛选对应的model项目tag真值标签数据:tlr、tsr、obstacle、animal、roadmarker、tsr_ramp
-                                "frame_rate_name":"3FPS",
+                                "frame_rate_num":"1FPS",
+                                "daytime_or_night": "daytime",  # 白天数据、或者夜间数据
                                 "batch_name":"b1"
                                }
+
     #output_json_file = 'Generalization_L3_list.json'  # JSON 字典文件的输出路径
     # output_json_file = '20240529_20240615_CN-003_tlr.json'  # JSON 字典文件的输出路径
     # output_json_file = '20240529_20240615_CN-003_animal.json'  # JSON 字典文件的输出路径
     # output_json_file = 'Generalization_G5_obstacle_list.json'  # JSON 字典文件的输出路径
     output_json_file = "/data/data_senseauto/bucket_tag_data/save_statistics_tags_info/2024_07/"+"_".join(search_data_project_info.values())+".json"  # JSON 字典文件的输出路径
 
-
     data_batch_id = "Data_Collection/GT_data/hadGtParser/had_gt_collection/"
     creat_datalist_config = {
                              "Ceph Addr":"ad_system_common:",
Index: SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nimport json\nimport copy\n\nclass SearchCameraTagFrameInfo:\n\n    def __init__(self,config_info_dict):\n\n        self.config_info_dict = config_info_dict\n        self.save_bucket_tag_data_path = \"/data/data_senseauto/bucket_tag_data\"\n        self.data_tag_file_name = \"data-tag.json\"\n        self.camera_frame_name_file_list=[\"center_camera_fov30\", \"center_camera_fov120\", \"rear_camera\"]\n\n        self.single_origin_record_tag_dict = {\"custom_labels\": '晴天，进隧道',\n                                              \"tag\": '车道线真值-隧道',\n                                              \"start\": 1716952055,\n                                              \"end\": 1716952115,\n                                              \"center_camera_fov30\": [],\n                                              \"center_camera_fov120\": [],\n                                              \"rear_camera\": []\n                                              }\n\n        self.statistics_tag_info_dict={\"custom_labels_statistics_info\":{},\n                                       \"tag_statistics_info\":{}}\n\n        self.search_data_senseauto_camera_tag_dict = {}  # 筛选过真值标签的数据帧结构体\n\n    def search_camera_frame_parser_name_info(self,data_tag_father_path,start_time=1716952055,end_time=1716952115):\n        search_camera_frame_name_dict = {\"center_camera_fov30\": [],\n                                         \"center_camera_fov120\": [],\n                                         \"rear_camera\": []\n                                         }\n\n\n        for camera_frame_parser_file_name in self.camera_frame_name_file_list:  #读取tag标签路径下的camera帧记录文件[\"center_camera_fov30.txt\", \"center_camera_fov120.txt\", \"rear_camera.txt\"]\n            camera_frame_parser_file_path = os.path.join(data_tag_father_path,\n                                                         camera_frame_parser_file_name+\".txt\")\n\n            try:\n                with open(camera_frame_parser_file_path, 'r', encoding='utf-8') as f:\n                    for row_camera_frame_parser_info in f.readlines():\n                        # single_row_frame_info_list = [int(value) for value in\n                        #                               row_camera_frame_parser_info.strip().split(', ')]\n                        string_single_row_frame_start_info = row_camera_frame_parser_info.strip().split(', ')[1]\n                        int_single_row_frame_start_info = int(string_single_row_frame_start_info[:10])\n\n                        if int_single_row_frame_start_info>=start_time and int_single_row_frame_start_info<=end_time:\n\n                            search_camera_frame_bucket_path = os.path.join(\"camera\",camera_frame_parser_file_name,string_single_row_frame_start_info+\".jpg\")\n                            search_camera_frame_name_dict[camera_frame_parser_file_name].append(search_camera_frame_bucket_path)\n            except Exception as e:\n                print(e)\n\n            self.single_origin_record_tag_dict[camera_frame_parser_file_name] = search_camera_frame_name_dict[camera_frame_parser_file_name]  # 为筛选的摄像头帧bucket存储路径赋值\n            # print(self.single_origin_record_tag_dict[camera_frame_parser_file_name])\n        # return search_camera_frame_name_dict\n\n    def read_data_tag_json_info(self,data_tag_father_path):\n        single_origin_record_tag_dict = {\"custom_labels\": '晴天，进隧道',\n                                         \"tag\": '车道线真值-隧道',\n                                         \"start\": 1716952055,\n                                         \"end\": 1716952115}\n\n        minute_origin_record_tag_dict_list = []\n\n        data_tag_file_path = os.path.join(data_tag_father_path,self.data_tag_file_name)\n        with open(data_tag_file_path, 'r', encoding='utf-8') as f:\n            # 使用 json.load() 方法解析JSON文件\n            data = json.load(f)\n            for origin_record_tag_index in range(len(data['origin_record_tag'])): #循环每分钟视频切片的tag标签数组\n\n                # for tag_name in single_origin_record_tag_dict:                    #获取单个tag标签数组的实际信息\n                #     if tag_name!='end':\n                #         single_origin_record_tag_dict[tag_name] = data['origin_record_tag'][origin_record_tag_index][tag_name]\n                #         self.single_origin_record_tag_dict[tag_name] = single_origin_record_tag_dict[tag_name]\n                #     else:\n                #         if tag_name not in data['origin_record_tag'][origin_record_tag_index]:\n                #             single_origin_record_tag_dict[tag_name] =  data['origin_record_tag'][origin_record_tag_index]['start']+2*60*1000\n                #             self.single_origin_record_tag_dict[tag_name] = single_origin_record_tag_dict[tag_name]\n                #         else:\n                #             single_origin_record_tag_dict[tag_name] = \\\n                #             data['origin_record_tag'][origin_record_tag_index][tag_name]\n                #             self.single_origin_record_tag_dict[tag_name] = single_origin_record_tag_dict[tag_name]\n                self.single_origin_record_tag_dict[\"custom_labels\"] = data['origin_record_tag'][origin_record_tag_index][\"custom_labels\"]\n                self.single_origin_record_tag_dict[\"tag\"] = data['origin_record_tag'][origin_record_tag_index][\"tag\"]\n                # 时间戳存在位数差异，有的是10位有的是13位\n                digit_count = len(str(data['origin_record_tag'][origin_record_tag_index][\"start\"]))\n                if digit_count==10:#此时为妙级别时间戳\n                    self.single_origin_record_tag_dict[\"start\"] = data['origin_record_tag'][origin_record_tag_index][\"start\"]\n                    if 'end' in data['origin_record_tag'][origin_record_tag_index]:\n                        self.single_origin_record_tag_dict[\"end\"] = data['origin_record_tag'][origin_record_tag_index][\n                            \"end\"]\n                    else:\n                        # 时间戳存在位数差异，有的是10位有的是13位\n                        self.single_origin_record_tag_dict[\"end\"] = data['origin_record_tag'][origin_record_tag_index][\n                                                                        \"start\"] + 2 * 60\n                else: #毫秒级计时时\n                    self.single_origin_record_tag_dict[\"start\"] = data['origin_record_tag'][origin_record_tag_index][\"start\"]/1000\n                    if 'end' in data['origin_record_tag'][origin_record_tag_index]:\n                        self.single_origin_record_tag_dict[\"end\"] = data['origin_record_tag'][origin_record_tag_index][\n                            \"end\"]/1000\n                    else:\n                        # 时间戳存在位数差异，有的是10位有的是13位\n                        self.single_origin_record_tag_dict[\"end\"] = data['origin_record_tag'][origin_record_tag_index][\n                                                                        \"start\"]/1000 + 2 * 60\n\n\n                self.search_camera_frame_parser_name_info(data_tag_father_path,self.single_origin_record_tag_dict[\"start\"],self.single_origin_record_tag_dict[\"end\"])\n\n\n                minute_origin_record_tag_dict_list.append(copy.deepcopy(self.single_origin_record_tag_dict))\n        return minute_origin_record_tag_dict_list\n\n    def analysis_data_senseauto_bucket_tag_data(self):\n\n        for monthdate in os.listdir(self.save_bucket_tag_data_path):\n            if monthdate ==self.config_info_dict[\"search_month\"]:\n                if monthdate not in self.search_data_senseauto_camera_tag_dict:\n                    self.search_data_senseauto_camera_tag_dict[monthdate]={}\n                for daytime in os.listdir(os.path.join(self.save_bucket_tag_data_path,monthdate)):\n                    # print(daytime)\n                    if daytime not in self.search_data_senseauto_camera_tag_dict[monthdate]:\n                        self.search_data_senseauto_camera_tag_dict[monthdate][daytime]={}\n                    for minute in os.listdir(os.path.join(self.save_bucket_tag_data_path,monthdate,daytime)):\n                        if minute not in self.search_data_senseauto_camera_tag_dict[monthdate][daytime]:\n                            self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute]={\"origin_record_tag\":[]}\n                        data_tag_father_path = os.path.join(self.save_bucket_tag_data_path,monthdate,daytime,minute)\n                        minute_origin_record_tag_dict_list = self.read_data_tag_json_info(data_tag_father_path)\n                        self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute][\"origin_record_tag\"] = minute_origin_record_tag_dict_list\n\n        # 将字典保存为JSON文件\n        with open(self.config_info_dict[\"save_statistics_tags_info_path\"]+'detail_tag_result_dict.json', 'w', encoding='utf-8') as f:\n            json.dump(self.search_data_senseauto_camera_tag_dict, f, ensure_ascii=False, indent=4)\n    def statustucs_search_senseauto_camera_tag_number(self):\n        for monthdate in self.search_data_senseauto_camera_tag_dict:\n            for daytime in self.search_data_senseauto_camera_tag_dict[monthdate]:\n                print(daytime)\n                for minute in self.search_data_senseauto_camera_tag_dict[monthdate][daytime]:\n                    for record_tag in self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute][\"origin_record_tag\"]:\n                        # print(record_tag[\"custom_labels\"])\n                        try:\n                            # print(record_tag)\n                            if len(record_tag[\"custom_labels\"])>0:\n                                if record_tag[\"custom_labels\"][0] not in self.statistics_tag_info_dict[\"custom_labels_statistics_info\"]:\n                                    self.statistics_tag_info_dict[\"custom_labels_statistics_info\"][record_tag[\"custom_labels\"][0]] = 1\n                                else:\n                                    self.statistics_tag_info_dict[\"custom_labels_statistics_info\"][\n                                        record_tag[\"custom_labels\"][0]] += 1\n\n                            if record_tag[\"tag\"] not in self.statistics_tag_info_dict[\"tag_statistics_info\"]:\n                                self.statistics_tag_info_dict[\"tag_statistics_info\"][record_tag[\"tag\"]] = 1\n                            else:\n                                self.statistics_tag_info_dict[\"tag_statistics_info\"][\n                                    record_tag[\"tag\"]] += 1\n                        except Exception as e:\n                            print(e)\n\n        print(self.statistics_tag_info_dict)\n        # 将字典保存为JSON文件\n        with open(self.config_info_dict[\"save_statistics_tags_info_path\"]+'statistics_tag_info_dict.json', 'w', encoding='utf-8') as f:\n            json.dump(self.statistics_tag_info_dict, f, ensure_ascii=False, indent=4)\n\nconfig_info_dict = {\"search_month\":\"2024_07\",\n                    \"save_statistics_tags_info_path\":\"/data/data_senseauto/bucket_tag_data/save_statistics_tags_info/2024_07/\"\n                    }\n\nsearch_tag_frame_info = SearchCameraTagFrameInfo(config_info_dict)\nsearch_tag_frame_info.analysis_data_senseauto_bucket_tag_data()\nsearch_tag_frame_info.statustucs_search_senseauto_camera_tag_number()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py
--- a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py	
+++ b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py	
@@ -7,7 +7,11 @@
     def __init__(self,config_info_dict):
 
         self.config_info_dict = config_info_dict
-        self.save_bucket_tag_data_path = "/data/data_senseauto/bucket_tag_data"
+        if self.config_info_dict['daytime_or_night']=="daytime":
+            self.save_bucket_tag_data_path = "/data/data_senseauto/bucket_tag_data/"+"AWS_DATA_daytime"
+        else:
+            self.save_bucket_tag_data_path = "/data/data_senseauto/bucket_tag_data/" + "AWS_DATA_night"
+
         self.data_tag_file_name = "data-tag.json"
         self.camera_frame_name_file_list=["center_camera_fov30", "center_camera_fov120", "rear_camera"]
 
@@ -114,19 +118,20 @@
     def analysis_data_senseauto_bucket_tag_data(self):
 
         for monthdate in os.listdir(self.save_bucket_tag_data_path):
-            if monthdate ==self.config_info_dict["search_month"]:
+            if monthdate ==self.config_info_dict["search_month"]:  #只检索指定的月份数据
                 if monthdate not in self.search_data_senseauto_camera_tag_dict:
                     self.search_data_senseauto_camera_tag_dict[monthdate]={}
                 for daytime in os.listdir(os.path.join(self.save_bucket_tag_data_path,monthdate)):
                     # print(daytime)
-                    if daytime not in self.search_data_senseauto_camera_tag_dict[monthdate]:
-                        self.search_data_senseauto_camera_tag_dict[monthdate][daytime]={}
-                    for minute in os.listdir(os.path.join(self.save_bucket_tag_data_path,monthdate,daytime)):
-                        if minute not in self.search_data_senseauto_camera_tag_dict[monthdate][daytime]:
-                            self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute]={"origin_record_tag":[]}
-                        data_tag_father_path = os.path.join(self.save_bucket_tag_data_path,monthdate,daytime,minute)
-                        minute_origin_record_tag_dict_list = self.read_data_tag_json_info(data_tag_father_path)
-                        self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute]["origin_record_tag"] = minute_origin_record_tag_dict_list
+                    if daytime in self.config_info_dict["search_date"]: #只检索选定日期列表中的aws数据
+                        if daytime not in self.search_data_senseauto_camera_tag_dict[monthdate]:
+                            self.search_data_senseauto_camera_tag_dict[monthdate][daytime]={}
+                        for minute in os.listdir(os.path.join(self.save_bucket_tag_data_path,monthdate,daytime)):
+                            if minute not in self.search_data_senseauto_camera_tag_dict[monthdate][daytime]:
+                                self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute]={"origin_record_tag":[]}
+                            data_tag_father_path = os.path.join(self.save_bucket_tag_data_path,monthdate,daytime,minute)
+                            minute_origin_record_tag_dict_list = self.read_data_tag_json_info(data_tag_father_path)
+                            self.search_data_senseauto_camera_tag_dict[monthdate][daytime][minute]["origin_record_tag"] = minute_origin_record_tag_dict_list
 
         # 将字典保存为JSON文件
         with open(self.config_info_dict["save_statistics_tags_info_path"]+'detail_tag_result_dict.json', 'w', encoding='utf-8') as f:
@@ -160,7 +165,9 @@
         with open(self.config_info_dict["save_statistics_tags_info_path"]+'statistics_tag_info_dict.json', 'w', encoding='utf-8') as f:
             json.dump(self.statistics_tag_info_dict, f, ensure_ascii=False, indent=4)
 
-config_info_dict = {"search_month":"2024_07",
+config_info_dict = {"daytime_or_night":"daytime",   # daytime、night
+                    "search_month":"2024_07",
+                    "search_date":["2024_07_30"],
                     "save_statistics_tags_info_path":"/data/data_senseauto/bucket_tag_data/save_statistics_tags_info/2024_07/"
                     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"84239490-113b-4cc7-b39b-4bc7941fae8c\" name=\"Changes\" comment=\"commit 1\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/SenseTimePycharmProjects/test_file/test1.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SenseTimePycharmProjects/test_file/test1.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ChangesViewManager\">\n    <option name=\"groupingKeys\">\n      <option value=\"directory\" />\n    </option>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <branch-grouping />\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"test\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2hB5QoyATHvgtZYLJYYZBMXKJEU\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Python.2.SearchCameraTagFrameInfo.executor\": \"Run\",\n    \"Python.3.CreateAWSTestDatalist.executor\": \"Run\",\n    \"Python.4.CheckInferResultsInfo.executor\": \"Run\",\n    \"Python.5.search_infer_miss_image_sample.executor\": \"Run\",\n    \"Python.6.RandomObtainSamples.executor\": \"Run\",\n    \"Python.CreateAWSTestDatalist.executor\": \"Run\",\n    \"Python.CreateHadTagMapping.executor\": \"Run\",\n    \"Python.GetImageAwsSaveInfo.executor\": \"Run\",\n    \"Python.SearchCameraTagFrameInfo.executor\": \"Run\",\n    \"Python.plot_tag_number_distribution_chart.executor\": \"Run\",\n    \"Python.ploy_h265_video.executor\": \"Run\",\n    \"Python.ploy_h265_video_single.executor\": \"Run\",\n    \"Python.poly_h265_video_twins.executor\": \"Run\",\n    \"Python.save_h265_video_twins.executor\": \"Run\",\n    \"Python.select_data_过滤标注文件.executor\": \"Run\",\n    \"Python.test.executor\": \"Run\",\n    \"Python.抽取datalist中的特定issue图片测试模型效果.executor\": \"Run\",\n    \"Python.构造datalist文件__AWS桶中对应issue的存储图像地址信息.executor\": \"Run\",\n    \"Python.查看datalist文件json的记录行数.executor\": \"Run\",\n    \"Python.递归统计指定路径下子文件夹中所有文件的个数.executor\": \"Run\",\n    \"Python.验收标注数据.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"last_opened_file_path\": \"/home/SENSETIME/zhangzhuo/PycharmProjects\",\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.CommitDialog\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Python.ploy_h265_video_single\">\n    <configuration name=\"验收标注数据\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/标注数据验收\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/标注数据验收/验收标注数据.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"6.RandomObtainSamples\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/6.RandomObtainSamples.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"递归统计指定路径下子文件夹中所有文件的个数\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/递归统计指定路径下子文件夹中所有文件的个数.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"抽取datalist中的特定issue图片测试模型效果\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/数据处理部分\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/数据处理部分/抽取datalist中的特定issue图片测试模型效果.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"ploy_h265_video_single\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video/ploy_h265_video_single.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"save_h265_video_twins\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"PycharmProjects\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video/save_h265_video_twins.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.验收标注数据\" />\n        <item itemvalue=\"Python.抽取datalist中的特定issue图片测试模型效果\" />\n        <item itemvalue=\"Python.save_h265_video_twins\" />\n        <item itemvalue=\"Python.ploy_h265_video_single\" />\n        <item itemvalue=\"Python.6.RandomObtainSamples\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-python-sdk-0509580d9d50-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.14494.241\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"84239490-113b-4cc7-b39b-4bc7941fae8c\" name=\"Changes\" comment=\"\" />\n      <created>1717054616925</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1717054616925</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"第一次提交代码\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722501299041</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722501299041</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"删除较大的文件数据\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722501895740</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722501895740</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"111\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722503306304</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722503306304</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Revert &quot;first commit&quot;&#10;&#10;This reverts commit 47a4b0c3f5bf764aa576995bf6c53a58e9726e4c.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722505108073</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722505108073</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Revert &quot;first commit&quot;&#10;&#10;This reverts commit 47a4b0c3f5bf764aa576995bf6c53a58e9726e4c.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722505346259</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722505346259</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"first commit 1\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722506501987</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722506501987</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"master add test\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722566851303</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722566851303</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"add test\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722566935965</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722566935965</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"add 2\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1722567475783</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1722567475783</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"OPEN_GENERIC_TABS\">\n      <map>\n        <entry key=\"a8899a4e-8048-4dc2-ac68-60ff962c4a19\" value=\"TOOL_WINDOW\" />\n        <entry key=\"d5298313-4711-4fe7-9d44-50cbf00f0cc6\" value=\"TOOL_WINDOW\" />\n      </map>\n    </option>\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"master\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"a8899a4e-8048-4dc2-ac68-60ff962c4a19\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"d5298313-4711-4fe7-9d44-50cbf00f0cc6\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\n    <MESSAGE value=\"第一次提交代码\" />\n    <MESSAGE value=\"删除较大的文件数据\" />\n    <MESSAGE value=\"111\" />\n    <MESSAGE value=\"Revert &quot;first commit&quot;&#10;&#10;This reverts commit 47a4b0c3f5bf764aa576995bf6c53a58e9726e4c.\" />\n    <MESSAGE value=\"first commit\" />\n    <MESSAGE value=\"first commit 1\" />\n    <MESSAGE value=\"master add test\" />\n    <MESSAGE value=\"add test\" />\n    <MESSAGE value=\"add 1\" />\n    <MESSAGE value=\"add 2\" />\n    <MESSAGE value=\"commit 1\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"commit 1\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,9 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="84239490-113b-4cc7-b39b-4bc7941fae8c" name="Changes" comment="commit 1">
+    <list default="true" id="84239490-113b-4cc7-b39b-4bc7941fae8c" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SenseTimePycharmProjects/test_file/test1.py" beforeDir="false" afterPath="$PROJECT_DIR$/SenseTimePycharmProjects/test_file/test1.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py" beforeDir="false" afterPath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py" beforeDir="false" afterPath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py" beforeDir="false" afterPath="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -34,6 +37,9 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="RESET_MODE" value="MIXED" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 3
@@ -47,6 +53,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "Python.2.SearchCameraTagFrameInfo.executor": "Run",
+    "Python.2、DownLoadAwsSaveInfoWithShell.executor": "Run",
     "Python.3.CreateAWSTestDatalist.executor": "Run",
     "Python.4.CheckInferResultsInfo.executor": "Run",
     "Python.5.search_infer_miss_image_sample.executor": "Run",
@@ -55,26 +62,37 @@
     "Python.CreateHadTagMapping.executor": "Run",
     "Python.GetImageAwsSaveInfo.executor": "Run",
     "Python.SearchCameraTagFrameInfo.executor": "Run",
+    "Python.get_h265_video_parameter_info.executor": "Run",
     "Python.plot_tag_number_distribution_chart.executor": "Run",
     "Python.ploy_h265_video.executor": "Run",
     "Python.ploy_h265_video_single.executor": "Run",
     "Python.poly_h265_video_twins.executor": "Run",
     "Python.save_h265_video_twins.executor": "Run",
     "Python.select_data_过滤标注文件.executor": "Run",
+    "Python.test (1).executor": "Run",
     "Python.test.executor": "Run",
+    "Python.test1.executor": "Run",
     "Python.抽取datalist中的特定issue图片测试模型效果.executor": "Run",
     "Python.构造datalist文件__AWS桶中对应issue的存储图像地址信息.executor": "Run",
     "Python.查看datalist文件json的记录行数.executor": "Run",
+    "Python.蒙特卡洛.executor": "Run",
     "Python.递归统计指定路径下子文件夹中所有文件的个数.executor": "Run",
     "Python.验收标注数据.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "master",
-    "last_opened_file_path": "/home/SENSETIME/zhangzhuo/PycharmProjects",
-    "settings.editor.selected.configurable": "project.propVCSSupport.CommitDialog"
+    "last_opened_file_path": "/data/FAW_HAD",
+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
   }
 }]]></component>
-  <component name="RunManager" selected="Python.ploy_h265_video_single">
-    <configuration name="验收标注数据" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/SenseTimePycharmProjects/datalist_标注文件处理/detecte_box_rule/tsr" />
+      <recent name="$PROJECT_DIR$/SenseTimePycharmProjects/datalist_标注文件处理/detecte_box_rule/tlr" />
+      <recent name="$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Python.2、DownLoadAwsSaveInfoWithShell">
+    <configuration name="2、DownLoadAwsSaveInfoWithShell" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PycharmProjects" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -83,11 +101,11 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/SenseTimePycharmProjects/标注数据验收" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/标注数据验收/验收标注数据.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -96,7 +114,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="6.RandomObtainSamples" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="2.SearchCameraTagFrameInfo" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PycharmProjects" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -109,7 +127,7 @@
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/6.RandomObtainSamples.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/2.SearchCameraTagFrameInfo.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -118,7 +136,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="递归统计指定路径下子文件夹中所有文件的个数" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="3.CreateAWSTestDatalist" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PycharmProjects" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -127,11 +145,11 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/递归统计指定路径下子文件夹中所有文件的个数.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/GetImageAwsSavePathFromDataSenseAuto/3.CreateAWSTestDatalist.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -140,7 +158,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="抽取datalist中的特定issue图片测试模型效果" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="构造datalist文件__AWS桶中对应issue的存储图像地址信息" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PycharmProjects" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -153,29 +171,7 @@
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/数据处理部分/抽取datalist中的特定issue图片测试模型效果.py" />
-      <option name="PARAMETERS" value="" />
-      <option name="SHOW_COMMAND_LINE" value="false" />
-      <option name="EMULATE_TERMINAL" value="false" />
-      <option name="MODULE_MODE" value="false" />
-      <option name="REDIRECT_INPUT" value="false" />
-      <option name="INPUT_FILE" value="" />
-      <method v="2" />
-    </configuration>
-    <configuration name="ploy_h265_video_single" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
-      <module name="PycharmProjects" />
-      <option name="ENV_FILES" value="" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <envs>
-        <env name="PYTHONUNBUFFERED" value="1" />
-      </envs>
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video/ploy_h265_video_single.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/数据处理部分/构造datalist文件__AWS桶中对应issue的存储图像地址信息.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -184,7 +180,7 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <configuration name="save_h265_video_twins" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+    <configuration name="get_h265_video_parameter_info" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PycharmProjects" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -197,7 +193,7 @@
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video/save_h265_video_twins.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/SenseTimePycharmProjects/ploy_H265_video/get_h265_video_parameter_info.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -208,11 +204,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Python.验收标注数据" />
-        <item itemvalue="Python.抽取datalist中的特定issue图片测试模型效果" />
-        <item itemvalue="Python.save_h265_video_twins" />
-        <item itemvalue="Python.ploy_h265_video_single" />
-        <item itemvalue="Python.6.RandomObtainSamples" />
+        <item itemvalue="Python.2、DownLoadAwsSaveInfoWithShell" />
+        <item itemvalue="Python.2.SearchCameraTagFrameInfo" />
+        <item itemvalue="Python.3.CreateAWSTestDatalist" />
+        <item itemvalue="Python.构造datalist文件__AWS桶中对应issue的存储图像地址信息" />
+        <item itemvalue="Python.get_h265_video_parameter_info" />
       </list>
     </recent_temporary>
   </component>
@@ -304,7 +300,31 @@
       <option name="project" value="LOCAL" />
       <updated>1722567475783</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="增加使用tags真值筛选标签下载脚本，获取aws样本信息">
+      <option name="closed" value="true" />
+      <created>1722993844520</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1722993844520</updated>
+    </task>
+    <task id="LOCAL-00011" summary="增加视频码率信息获功能模块">
+      <option name="closed" value="true" />
+      <created>1723089407978</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1723089407978</updated>
+    </task>
+    <task id="LOCAL-00012" summary="add detect box set rule">
+      <option name="closed" value="true" />
+      <created>1723202785518</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1723202785518</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -383,6 +403,9 @@
     <MESSAGE value="add 1" />
     <MESSAGE value="add 2" />
     <MESSAGE value="commit 1" />
-    <option name="LAST_COMMIT_MESSAGE" value="commit 1" />
+    <MESSAGE value="增加使用tags真值筛选标签下载脚本，获取aws样本信息" />
+    <MESSAGE value="增加视频码率信息获功能模块" />
+    <MESSAGE value="add detect box set rule" />
+    <option name="LAST_COMMIT_MESSAGE" value="add detect box set rule" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"Black\">\n    <option name=\"sdkName\" value=\"Python 3.8\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.8" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (base)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># 使用/data/data_senseauto/bucket_tag_data/download_tags_file_shell 目录下的AWS文件下载指令下载tags真值数据中的如下文件：\n# 使用ads-cli 命令进行tags相关文件下载\n#   data-tag.json、center_camera_fov30.txt、center_camera_fov120.txt、rear_camera.txt\nimport os\nimport path\nimport subprocess\n\nclass DownLoadAwsSaveInfoWithShell:\n    def __init__(self,aws_download_shell,down_load_file_name_list):\n        self.aws_download_shell = aws_download_shell\n        self.down_load_file_name_list = down_load_file_name_list\n        self.read_aws_download_shell()\n        pass\n    def read_aws_download_shell(self):\n        cur = open(self.aws_download_shell,\"r\")\n        all_download_info = cur.readlines()\n        for row_info in all_download_info:\n            for file_name in self.down_load_file_name_list:\n                row_info_split_list = row_info.split(\" \")\n                # 对文件tags文件存储路径进行修正，增加daytime目录结构\n                add_daytime_save_path = row_info_split_list[5]\n                add_daytime_save_path = add_daytime_save_path.split('/')\n                add_daytime_save_path.insert(5,add_daytime_save_path[5][:10])  # 增加daytime目录结构信息\n                # print(add_daytime_save_path)\n                row_info_split_list[5] = \"/\".join(add_daytime_save_path)\n\n                if \"camera\" in file_name:\n                    row_info_split_list[4] = row_info_split_list[4][:-1] + \"/camera/\" + file_name + '\"'\n                    row_info_split_list[5] = row_info_split_list[5].strip()[:-1] + \"/\" + file_name + '\"'\n                    result_row_info = \" \".join(row_info_split_list)\n                    result = subprocess.run([result_row_info], shell=True, capture_output=True, text=True)\n                else:\n                    row_info_split_list[4] = row_info_split_list[4][:-1] + \"/\" + file_name + '\"'\n                    row_info_split_list[5] = row_info_split_list[5].strip()[:-1] + \"/\" + file_name + '\"'\n                    result_row_info = \" \".join(row_info_split_list)\n                    result = subprocess.run([result_row_info], shell=True, capture_output=True, text=True)\n                print(result_row_info)\n\n\n\n\n      \n\n\n\n\naws_download_shell = \"/data/data_senseauto/bucket_tag_data/download_tags_file_shell/TLR_0809_data.sh\"\n#'center_camera_fov30.txt','center_camera_fov120.txt','rear_camera.txt'\ndown_load_file_name_list = [\"data-tag.json\",'center_camera_fov30.txt','center_camera_fov120.txt','rear_camera.txt']\ndown_load_aws_info = DownLoadAwsSaveInfoWithShell(aws_download_shell,down_load_file_name_list)\n\n\naaa = os.path.join(\"aasdf\",\"fasdf\")\nprint(aaa)
===================================================================
diff --git a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py
--- a/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py	
+++ b/SenseTimePycharmProjects/获取DataSenseAuto上打过tag的泛化真值image数据信息/使用tags真值标签筛选目标图像帧信息/2、DownLoadAwsSaveInfoWithShell.py	
@@ -20,7 +20,8 @@
                 # 对文件tags文件存储路径进行修正，增加daytime目录结构
                 add_daytime_save_path = row_info_split_list[5]
                 add_daytime_save_path = add_daytime_save_path.split('/')
-                add_daytime_save_path.insert(5,add_daytime_save_path[5][:10])  # 增加daytime目录结构信息
+                # print(add_daytime_save_path)
+                add_daytime_save_path.insert(6,add_daytime_save_path[6][:10])  # 增加daytime目录结构信息
                 # print(add_daytime_save_path)
                 row_info_split_list[5] = "/".join(add_daytime_save_path)
 
@@ -38,13 +39,7 @@
 
 
 
-
-      
-
-
-
-
-aws_download_shell = "/data/data_senseauto/bucket_tag_data/download_tags_file_shell/TLR_0809_data.sh"
+aws_download_shell = "/data/data_senseauto/bucket_tag_data/download_tags_file_shell/TLR_202407_night_data_31.sh"
 #'center_camera_fov30.txt','center_camera_fov120.txt','rear_camera.txt'
 down_load_file_name_list = ["data-tag.json",'center_camera_fov30.txt','center_camera_fov120.txt','rear_camera.txt']
 down_load_aws_info = DownLoadAwsSaveInfoWithShell(aws_download_shell,down_load_file_name_list)
